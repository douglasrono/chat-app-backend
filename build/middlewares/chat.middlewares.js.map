{"version":3,"sources":["../../src/middlewares/chat.middlewares.js"],"names":["users","addUser","id","names","room","trim","toLowerCase","existingUser","find","user","error","push","removeUser","index","findIndex","splice","getUser","getUsersInRoom","filter","module","exports"],"mappings":";;AAAA,IAAMA,KAAK,GAAG,EAAd;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAyB;AAAA,MAAtBC,EAAsB,QAAtBA,EAAsB;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAErCD,EAAAA,KAAK,GAAGA,KAAK,CAACE,IAAN,GAAaC,WAAb,EAAR;AACAF,EAAAA,IAAI,GAAGA,IAAI,CAACC,IAAL,GAAYC,WAAZ,EAAP;AAEF,MAAMC,YAAY,GAAGP,KAAK,CAACQ,IAAN,CAAW,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACL,IAAL,KAAcA,IAAd,IAAsBK,IAAI,CAACN,KAAL,KAAeA,KAA/C;AAAA,GAAX,CAArB;AAEA,MAAG,CAACA,KAAD,IAAU,CAACC,IAAd,EAAoB,OAAO;AAAEM,IAAAA,KAAK,EAAE;AAAT,GAAP;AACpB,MAAGH,YAAH,EAAiB,OAAO;AAAEG,IAAAA,KAAK,EAAE;AAAT,GAAP;AAEjB,MAAMD,IAAI,GAAG;AAAEP,IAAAA,EAAE,EAAFA,EAAF;AAAMC,IAAAA,KAAK,EAALA,KAAN;AAAaC,IAAAA,IAAI,EAAJA;AAAb,GAAb;AAEAJ,EAAAA,KAAK,CAACW,IAAN,CAAWF,IAAX;AAEA,SAAO;AAAEA,IAAAA,IAAI,EAAJA;AAAF,GAAP;AACD,CAfD;;AAiBA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACV,EAAD,EAAQ;AACzB,MAAMW,KAAK,GAAGb,KAAK,CAACc,SAAN,CAAgB,UAACL,IAAD;AAAA,WAAUA,IAAI,CAACP,EAAL,KAAYA,EAAtB;AAAA,GAAhB,CAAd;AAEA,MAAGW,KAAK,KAAK,CAAC,CAAd,EAAiB,OAAOb,KAAK,CAACe,MAAN,CAAaF,KAAb,EAAoB,CAApB,EAAuB,CAAvB,CAAP;AAClB,CAJD;;AAMA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACd,EAAD;AAAA,SAAQF,KAAK,CAACQ,IAAN,CAAW,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACP,EAAL,KAAYA,EAAtB;AAAA,GAAX,CAAR;AAAA,CAAhB;;AAEA,IAAMe,cAAc,GAAG,SAAjBA,cAAiB,CAACb,IAAD;AAAA,SAAUJ,KAAK,CAACkB,MAAN,CAAa,UAACT,IAAD;AAAA,WAAUA,IAAI,CAACL,IAAL,KAAcA,IAAxB;AAAA,GAAb,CAAV;AAAA,CAAvB;;AAEAe,MAAM,CAACC,OAAP,GAAiB;AAAEnB,EAAAA,OAAO,EAAPA,OAAF;AAAWW,EAAAA,UAAU,EAAVA,UAAX;AAAuBI,EAAAA,OAAO,EAAPA,OAAvB;AAAgCC,EAAAA,cAAc,EAAdA;AAAhC,CAAjB","sourcesContent":["const users = [];\n\nconst addUser = ({ id, names, room }) => {\n\n    names = names.trim().toLowerCase();\n    room = room.trim().toLowerCase();\n\n  const existingUser = users.find((user) => user.room === room && user.names === names);\n\n  if(!names || !room) return { error: 'Username and room are required.' };\n  if(existingUser) return { error: 'Username is taken.' };\n\n  const user = { id, names, room };\n\n  users.push(user);\n\n  return { user };\n}\n\nconst removeUser = (id) => {\n  const index = users.findIndex((user) => user.id === id);\n\n  if(index !== -1) return users.splice(index, 1)[0];\n}\n\nconst getUser = (id) => users.find((user) => user.id === id);\n\nconst getUsersInRoom = (room) => users.filter((user) => user.room === room);\n\nmodule.exports = { addUser, removeUser, getUser, getUsersInRoom };"],"file":"chat.middlewares.js"}
{"version":3,"sources":["../../src/helpers/bodyParser.js"],"names":["BodyParser","request","Promise","resolve","reject","totalChunked","on","err","console","error","chunk","body","JSON","parse"],"mappings":";;;;;;;;;;;;;;;;;IAAMA,U;;;;;;;;sGACH,iBAAyBC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,iDACY,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,sBAAIC,YAAY,GAAG,EAAnB;AACAJ,kBAAAA,OAAO,CACJK,EADH,CACM,OADN,EACe,UAAAC,GAAG,EAAI;AAClBC,oBAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAH,oBAAAA,MAAM;AACP,mBAJH,EAKGE,EALH,CAKM,MALN,EAKc,UAAAI,KAAK,EAAI;AACnBL,oBAAAA,YAAY,IAAIK,KAAhB,CADmB,CACG;AACvB,mBAPH,EAQGJ,EARH,CAQM,KARN,EAQa,YAAM;AACfL,oBAAAA,OAAO,CAACU,IAAR,GAAeC,IAAI,CAACC,KAAL,CAAWR,YAAX,CAAf,CADe,CACyB;;AACxCF,oBAAAA,OAAO;AACR,mBAXH;AAYD,iBAdM,CADZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;eAmBYH,U","sourcesContent":["class BodyParser {\n   static async  bodyParser(request) {\n        return new Promise((resolve, reject) => {\n          let totalChunked = \"\" \n          request\n            .on(\"error\", err => {\n              console.error(err)\n              reject()\n            })\n            .on(\"data\", chunk => {\n              totalChunked += chunk // Data is in chunks, concatenating in totalChunked\n            })\n            .on(\"end\", () => {\n              request.body = JSON.parse(totalChunked) // Adding Parsed Chunked into request.body\n              resolve()\n            })\n        })\n      }\n}\n\nexport default BodyParser;"],"file":"bodyParser.js"}
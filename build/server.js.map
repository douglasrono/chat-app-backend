{"version":3,"sources":["../src/server.js"],"names":["hostname","port","servers","server","listen","io","require","users","User","on","socket","data","id","name","verifyToken","verifyAllTokens","token","user","push","socketId","email","broadData","broadcast","emit","messageData","message","sender","filter","receiver","messageDatas","receiverName","undefined","senderId","receiverId","UserHelper","insertData","insert","module","exports"],"mappings":"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","sourcesContent":["const hostname = \"localhost\";\nconst port = 8000;\nimport server from \"./routes/index\";\nimport verifyToken from \"./helpers/verify.token\";\nimport UserHelper from './helpers/user.helper';\nconst servers = server.listen(port);\nconst io = require(\"socket.io\")(servers);\n\nconst users = [];\nconst User = {}\nio.on(\"connection\", (socket) => {  \n  socket.on(\"new-user\", async (data) => {\n    User[socket.id] = data.name;\n    const user = await verifyToken.verifyAllTokens(data.token);\n    users.push({\n      socketId:socket.id,\n      id:user.id,\n      email:user.email, \n      name:data.name\n    })\n    const broadData={\n      name:data.name,\n      email:user.email\n    }\n    socket.broadcast.emit(\"user-connected\", broadData);\n  });\n  socket.on(\"send-chat-message\",async (messageData) => {\n    const message =  messageData.message;\n    const user = await verifyToken.verifyAllTokens(messageData.token);\n    const sender = users.filter(data => data.email === user.email);\n    const receiver = users.filter(data => data.email !== user.email);\n    const messageDatas={\n      receiverName : receiver[0]===undefined?'Anyonmous': receiver[0].name,\n      senderId :sender[0].id,\n      receiverId:receiver[0]===undefined?0: receiver[0].id,\n      message\n      \n    }\n    const insert = await UserHelper.insertData(messageDatas)\n    // const messages = await UserHelper.getMessages()\n    socket.broadcast.emit(\"chat-message\", {  \n      \n      message: message,\n      name: User[socket.id],\n      receiverName: receiver[0]===undefined?'Anyonmous': receiver[0].name\n    });\n  });\n  socket.on(\"disconnect\", () => {\n    socket.broadcast.emit(\"user-disconnected\", User[socket.id]);\n    delete User[socket.id];\n  });\n});\n\nmodule.exports = servers;\n"],"file":"server.js"}